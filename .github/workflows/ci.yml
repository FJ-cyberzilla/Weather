name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  BUILD_TYPE: Release

jobs:
  build-and-test:
    name: Build & Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            deps_cmd: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev nlohmann-json3-dev
            build_cmd: make
            artifact_name: weather-cli-linux
            artifact_path: ./weather-cli
          - os: macos-latest
            deps_cmd: brew install curl nlohmann-json
            build_cmd: make
            artifact_name: weather-cli-macos
            artifact_path: ./weather-cli
          - os: windows-latest
            deps_cmd: |
              choco install msys2 -y
              C:\msys64\usr\bin\bash.exe -lc "pacman -S --noconfirm mingw-w64-x86_64-gcc mingw-w64-x86_64-curl mingw-w64-x86_64-nlohmann-json"
            build_cmd: |
              C:\msys64\usr\bin\bash.exe -lc "cd ${{ github.workspace }} && make"
            artifact_name: weather-cli-windows
            artifact_path: ./weather-cli.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: ${{ matrix.deps_cmd }}

    - name: Build project
      run: ${{ matrix.build_cmd }}

    - name: Run basic test
      run: |
        ./weather-cli --help || echo "Help command test completed"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_path }}
        retention-days: 30

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev nlohmann-json3-dev cppcheck clang-tidy

    - name: Run cppcheck
      run: |
        cppcheck --enable=all --error-exitcode=1 --suppress=missingIncludeSystem weather_cli.cpp

    - name: Run clang-tidy
      run: |
        clang-tidy weather_cli.cpp -- -std=c++17 -I/usr/include/curl -I/usr/include/nlohmann

    - name: Check formatting (clang-format)
      run: |
        clang-format --dry-run --Werror weather_cli.cpp

  release:
    name: Create Release
    needs: [build-and-test, code-quality]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts

    - name: Create release assets
      run: |
        mkdir -p release
        cp -r artifacts/* release/
        cd release
        find . -type f -exec sha256sum {} \; > checksums.txt

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
